package l.c.h.j.exploit;

import java.awt.event.ActionEvent;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;
import javax.swing.Timer;
import l.c.h.d.c;
import l.c.h.h.j;
import l.c.h.h.a.f;
import l.c.h.j.w;
import l.c.h.j.w$d;
import l.c.u.x;
import l.c.u.s.g;
import net.minecraft.block.Block;
import net.minecraft.block.BlockPistonExtension;
import net.minecraft.block.BlockPistonMoving;
import net.minecraft.network.play.server.SPacketSoundEffect;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.tileentity.TileEntitySign;
import net.minecraft.util.text.TextComponentString;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.eventhandler.Event.Result;

@w$d(
   name = "Anti Lag",
   description = "Prevents lag exploits",
   category = c.EXPLOIT
)
public class AntiLag extends w {
   private final Timer of = new Timer(500, this::q);
   private final j oq = new f("Anti Sound", this, true);
   private final j ot = new f("Anti Piston", this, true);
   private final j oe = new f("Anti Sign", this, false);
   private final Set ov = new HashSet();
   public static final boolean ou;
   public static final int oi;
   public static final boolean od;

   public void i() {
      // $FF: Couldn't be decompiled
   }

   public void j() {
      // $FF: Couldn't be decompiled
   }

   @SubscribeEvent
   public void f(g var1) {
      if (this.qm() && (Boolean)this.oq.ti() && var1.packet instanceof SPacketSoundEffect) {
         SPacketSoundEffect var2 = (SPacketSoundEffect)var1.packet;
         if (this.ov.contains(var2.getSound())) {
            var1.setCanceled(true);
         }

         this.ov.add(var2.getSound());
      }

   }

   @SubscribeEvent
   public void k(x var1) {
      if (this.qm() && (Boolean)this.ot.ti()) {
         Block var2 = var1.iBlockState.getBlock();
         if (var2 instanceof BlockPistonMoving || var2 instanceof BlockPistonExtension) {
            var1.setCanceled(true);
            var1.setResult(Result.DENY);
         }
      }

   }

   public void n() {
      if (this.qm() && (Boolean)this.oe.ti()) {
         Iterator var1 = mc.world.loadedTileEntityList.iterator();
         if (var1.hasNext()) {
            TileEntity var2 = (TileEntity)var1.next();
            if (var2 instanceof TileEntitySign) {
               TileEntitySign var3 = (TileEntitySign)var2;
               String[] var4 = new String[]{"Buy", "Backdoored", "Client", "Now"};
               byte var5 = 0;
               if (var5 < var3.signText.length) {
                  var3.signText[var5] = new TextComponentString(var4[var5]);
                  int var9 = var5 + 1;
               }
            }
         }
      }

   }

   // $FF: synthetic method
   private void q(ActionEvent var1) {
   }
}
